using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace Test
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        static void program()

        // Takes a screenshot of the screen
        {
            // Start the process...  
            Bitmap memoryImage;
            memoryImage = new Bitmap(1920, 1080);
            Size s = new Size(memoryImage.Width, memoryImage.Height);

            Graphics memoryGraphics = Graphics.FromImage(memoryImage);

            memoryGraphics.CopyFromScreen(0, 0, 0, 0, s);

            //That's it! Save the image in the directory and this will work like charm.  
            string fileName = string.Format(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + //.MyPictures is the pictures file
                      @"\Screenshot" + "_" +
                      DateTime.Now.ToString("(dd_MMMM_hh_mm_ss_tt)") + ".png");

            // save it  
            memoryImage.Save(fileName);

            PictureBox pictureBox = new PictureBox();
            pictureBox.Image = memoryImage;

            // Get the color of a pixel within myBitmap.
            Color pixelColor = memoryImage.GetPixel(50, 50);

            MessageBox.Show(pixelColor.ToString());
        }

        private void button1_Click(object sender, EventArgs e)
        {
            // For each screen, add the screen properties to a list box.
            // Displays screen physical properties in the list box.
            foreach (var screen in System.Windows.Forms.Screen.AllScreens)
            {
                listBox1.Items.Add("Device Name: " + 
                    screen.DeviceName);
                listBox1.Items.Add("Bounds: " +
                    screen.Bounds.ToString());
                listBox1.Items.Add("Type: " +
                    screen.GetType().ToString());
                listBox1.Items.Add("Working Area: " +
                    screen.WorkingArea.ToString());
                listBox1.Items.Add("Primary Screen: " +
                    screen.Primary.ToString());
            }

            program();
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            lblMouseCoordinateDisplay.Text = Cursor.Position.ToString();
        }
    }
}
